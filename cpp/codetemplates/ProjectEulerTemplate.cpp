//  ProjectEuler

//#include "stdafx.h" //Uncomment this line if you are running Visual Studio
#include <iostream>

/* If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.
 */
int problem1() {
    int sum = 0;//int length can vary, but is at least two bytes, so suitable for use here
    // insert code
    return sum;
}

// Making problem 1 parameterizable
//note this is a different signature from previous problem1(), so this is ok
int problem1(int a, int b, int n) {
    int sum = 0;
    // insert code
    return sum;
}

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:
 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 find the sum of the even-valued terms.
 */
int problem2() {
    int sum_ = 0;
    // insert code
    return sum_;
}

/* A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99. Find the largest palindrome made from the product of two 3-digit numbers.*/
int problem4() {
    int max_pal = 0;
    // insert code
    return max_pal;
}


int main(int argc, const char * argv[]) {
    std::cout << "Problem 1 solution = " << problem1() << std::endl;
    //system("pause");  //Uncomment this line if you are running Visual Studio
    return 0;
}
